<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>提Bug+问题流程</title>
    <link href="/blog/raise/"/>
    <url>/blog/raise/</url>
    
    <content type="html"><![CDATA[<span><a href="http://www.liyansheng.top/blog"><img src="https://img.shields.io/badge/木子空间-自营博客-00dfbf" alt="自营博客"></a><a href="https://yan-sheng-li.github.io/project/"><img src="https://img.shields.io/badge/木子空间-项目&资料-1e90ff" alt="项目合集"></a><a href="https://blog.csdn.net/weixin_44107140"><img src="https://img.shields.io/badge/木子空间-CSDN&粉丝1.5w+-FC5531" alt="CSDN博客"></a><a href="https://gitee.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-Gitee-orange" alt="Gitee"></a><a href="https://github.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-GitHub-black" alt="GitHub"></a><img src="https://img.shields.io/badge/木子空间-公众号《编程亿点有趣》&粉丝6k+-brightgreen" alt="公众号"><a href="https://qm.qq.com/cgi-bin/qm/qr?k=NZUoWMzd3PQLWwxRGMiBNYEnVkEdNq__&jump_from=webapi&authKey=kgAofDqUzgwMCSX+UQQwxf837zMeWFGGmo4iIcbgkklW2pdfmVOlxPWAK6sMYMaC"><img src="https://img.shields.io/badge/木子空间-QQ社群(450+人)-18a2ea" alt="QQ Group"></a><img src="https://img.shields.io/badge/博主-QQ：1761724207-29a1db" alt="QQ"><img src="https://img.shields.io/badge/博主-微信：17641244340-07c261" alt="微信"><a href="https://www.xiaohongshu.com/user/profile/668f634100000000030315a1"><img src="https://img.shields.io/badge/木子空间-小红书-FF2842" alt="小红书"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423150441.png"><img src="https://img.shields.io/badge/木子空间-闲鱼-ffe10f" alt="闲鱼"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423145452.png"><img src="https://img.shields.io/badge/木子空间-小程序商店-green" alt="小程序商店"></a></span><h1 id="项目提问题，提Bug，请看步骤👇"><a href="#项目提问题，提Bug，请看步骤👇" class="headerlink" title="项目提问题，提Bug，请看步骤👇"></a>项目提问题，提Bug，请看步骤👇</h1><h2 id="1、打开我给你的项目仓库地址"><a href="#1、打开我给你的项目仓库地址" class="headerlink" title="1、打开我给你的项目仓库地址"></a>1、打开我给你的项目仓库地址</h2><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20250224220859255.png"></p><h2 id="2、按下图数字顺序操作"><a href="#2、按下图数字顺序操作" class="headerlink" title="2、按下图数字顺序操作"></a>2、按下图数字顺序操作</h2><blockquote><p>切换到【工单】面板，点【创建工单】，然后输入【工单标题】，【简单描述过程】，最后点右下角的【创建工单】提交即可。</p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20250224220927094.png"></p><blockquote><p><strong>注意：一个问题一个工单，无需长篇大论，简明扼要</strong></p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/20250111132745.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>自建内网穿透服务</title>
    <link href="/blog/posts/57913.html"/>
    <url>/blog/posts/57913.html</url>
    
    <content type="html"><![CDATA[<h1 id="自建内网穿透服务"><a href="#自建内网穿透服务" class="headerlink" title="自建内网穿透服务"></a>自建内网穿透服务</h1><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241111014054731.png" alt="image-20241111014054731"></p><p>开源工具：frp</p><p>仓库地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>下载对应的版本。</p><p>我是基于centos与window使用</p><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241111012041220.png" alt="image-20241111012041220"></p><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><p>上传包，解压</p><p>配置文件默认是7000端口，不改也行</p><p>直接启动<code>./frps</code>即可</p><blockquote><p>当然，可以使用 pm2 来管理 FRP 服务端</p></blockquote><h3 id="1-安装-pm2（如果尚未安装）"><a href="#1-安装-pm2（如果尚未安装）" class="headerlink" title="1. 安装 pm2（如果尚未安装）"></a>1. 安装 pm2（如果尚未安装）</h3><ul><li>如果服务器是基于 Node.js 环境，使用以下命令全局安装 pm2：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g pm2<br></code></pre></td></tr></table></figure><h3 id="2-配置frps启动脚本"><a href="#2-配置frps启动脚本" class="headerlink" title="2. 配置frps启动脚本"></a>2. 配置<code>frps</code>启动脚本</h3><ul><li>创建一个启动<code>frps</code>的脚本文件（例如<code>frps-start.sh</code>），内容如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>./frps -c./frps.ini  <span class="hljs-comment"># 这里假设你的frps.ini和frps在同一目录，如果不是需要修改路径</span><br></code></pre></td></tr></table></figure><ul><li>赋予脚本执行权限：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x frps-start.sh<br></code></pre></td></tr></table></figure><h3 id="3-使用-pm2-启动frps"><a href="#3-使用-pm2-启动frps" class="headerlink" title="3. 使用 pm2 启动frps"></a>3. 使用 pm2 启动<code>frps</code></h3><ul><li>在终端中执行以下命令，通过 pm2 启动<code>frps</code>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 start frps-start.sh --name frps<br></code></pre></td></tr></table></figure><p>这里<code>--name frps</code>是给这个进程命名为<code>frps</code>，方便后续对其进行管理。</p><h3 id="4-pm2-常用管理命令"><a href="#4-pm2-常用管理命令" class="headerlink" title="4. pm2 常用管理命令"></a>4. pm2 常用管理命令</h3><ul><li><strong>查看<code>frps</code>运行状态</strong>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 status frps<br></code></pre></td></tr></table></figure><ul><li>重启<code>frps</code>**：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 restart frps<br></code></pre></td></tr></table></figure><ul><li>**停止<code>frps</code>**：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 stop frps<br></code></pre></td></tr></table></figure><ul><li><strong>查看<code>frps</code>的日志</strong>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 logs frps<br></code></pre></td></tr></table></figure><p>使用 pm2 管理<code>frps</code>可以方便地实现进程守护、自动重启等功能，提高服务的稳定性和可维护性。同时，在配置过程中要注意脚本中的路径和参数设置与你的实际环境相匹配。</p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>解压，修改配置文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">serverAddr</span> = <span class="hljs-string">&quot;xxx.xxx&quot;</span><br><span class="hljs-attr">serverPort</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-section">[[proxies]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;test-tcp&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;tcp&quot;</span><br><span class="hljs-attr">localIP</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br><span class="hljs-attr">localPort</span> = <span class="hljs-number">8080</span><br><span class="hljs-attr">remotePort</span> = <span class="hljs-number">8085</span><br><br><span class="hljs-section">[[proxies]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;app2&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;tcp&quot;</span><br><span class="hljs-attr">localIP</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br><span class="hljs-attr">localPort</span> = <span class="hljs-number">8081</span><br><span class="hljs-attr">remotePort</span> = <span class="hljs-number">8085</span><br></code></pre></td></tr></table></figure><p>可以配置多组</p><p>启动服务，用命令行交互窗口<code>frpc.exe -c ./frpc.toml</code></p><p>为了方便，可以写个bat脚本，下次双击启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">@<span class="hljs-built_in">echo</span> off<br>frpc.exe -c ./frpc.toml<br>pause<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote><p>假设你已经将本地的 8080 端口服务通过 FRP 映射到公网</p></blockquote><ol><li>本地服务情况<ul><li>假设本地运行着一个简单的 Web 服务，比如使用 Python 的 Flask 框架启动的一个应用，监听在本地的 8080 端口。示例代码如下（仅为示例，你可以是其他类型的 8080 端口服务）：</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8080</span>)<br></code></pre></td></tr></table></figure><ol><li><p>测试访问公网映射端口</p><ul><li>在公网的其他设备（比如你的手机使用移动数据网络，或者另外一台不在本地局域网内的电脑）上，打开浏览器。</li><li>在浏览器地址栏中输入公网服务器的 IP 地址（如果配置了域名，使用域名也可以）和映射的公网端口（这里是 8080），例如<code>http://公网服务器IP:8080</code>或者<code>http://your_domain.com:8080</code>（如果使用域名）。</li><li>如果一切正常，你应该能够看到在本地 8080 端口服务返回的内容，比如上述 Flask 示例中的 “Hello, World!” 信息。这就表明 FRP 成功实现了内网穿透，使得公网设备可以访问到本地局域网内的服务。</li></ul></li><li><p>如果是其他类型的服务如 SSH、数据库等），可以使用相应的客户端工具进行测试</p></li></ol><ul><li>对于 SSH 服务（假设将本地 22 端口的 SSH 服务通过 FRP 映射到公网 6000 端口）<ul><li>在公网设备上，使用 SSH 客户端（如 PuTTY，如果是 Windows 系统）。在 PuTTY 的配置中，输入公网服务器的 IP 地址（或域名）和映射的公网端口 6000，然后尝试连接。如果连接成功并能正常登录到本地 SSH 服务所在的机器，说明 FRP 对 SSH 服务的内网穿透成功。</li></ul></li><li>对于数据库服务（假设将本地 MySQL 的 3306 端口通过 FRP 映射到公网 7000 端口）<ul><li>在公网设备上，可以使用数据库连接工具（如 MySQL Workbench）。在连接设置中，将服务器地址设置为公网服务器的 IP 地址（或域名），端口设置为 7000，然后尝试使用正确的用户名和密码连接本地的 MySQL 数据库。如果能成功连接，表明 FRP 对数据库服务的内网穿透有效。</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>tool</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx代理静态资源</title>
    <link href="/blog/posts/29122.html"/>
    <url>/blog/posts/29122.html</url>
    
    <content type="html"><![CDATA[<p>以下是一个静态文件代理的示例配置，启用了SSL：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span> example.com;<br><br>    <span class="hljs-comment"># SSL证书配置</span><br>    <span class="hljs-attribute">ssl_certificate</span> /path/to/your/certificate.crt;<br>    <span class="hljs-attribute">ssl_certificate_key</span> /path/to/your/private.key;<br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">2</span> TLSv1.<span class="hljs-number">3</span>;<br>    <span class="hljs-attribute">ssl_ciphers</span> HIGH:!aNULL:!MD5;<br><br>    <span class="hljs-comment"># 设置根目录，静态文件将从这个目录提供</span><br>    <span class="hljs-attribute">root</span> /path/to/your/static/files;<br><br>    <span class="hljs-comment"># 代理静态文件</span><br>    <span class="hljs-section">location</span> /static/ &#123;<br>        <span class="hljs-attribute">alias</span> /path/to/your/static/files/;<br>        <span class="hljs-attribute">expires</span> <span class="hljs-number">30d</span>;<br>        <span class="hljs-attribute">access_log</span> /var/log/nginx/static_access.log;<br>    &#125;<br><br>    <span class="hljs-comment"># 针对特定静态资源类型设置缓存</span><br>    <span class="hljs-section">location</span> <span class="hljs-regexp">~* \.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;<br>        <span class="hljs-attribute">root</span> /path/to/your/static/files;<br>        <span class="hljs-attribute">expires</span> <span class="hljs-number">7d</span>;<br>        <span class="hljs-attribute">access_log</span> <span class="hljs-literal">off</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"># 配置HTTP自动跳转到HTTPS</span><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> example.com;<br>    <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$request_uri</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h3><ul><li><code>listen 443 ssl</code>：开启443端口的SSL监听，启用HTTPS。</li><li><code>ssl_certificate</code> 和 <code>ssl_certificate_key</code>：指定SSL证书文件和私钥文件的路径。</li><li><code>ssl_protocols</code> 和 <code>ssl_ciphers</code>：设置SSL协议版本和加密套件，以确保安全性。</li><li><code>return 301 https://$server_name$request_uri;</code>：将HTTP请求自动重定向到HTTPS，保证所有访问都通过加密连接。</li></ul><p>这样配置后，访问静态资源时会通过HTTPS加密传输，提升了数据的安全性。</p>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>npminstall很慢-解决方法</title>
    <link href="/blog/posts/60362.html"/>
    <url>/blog/posts/60362.html</url>
    
    <content type="html"><![CDATA[<h1 id="npm-install很慢-解决方法"><a href="#npm-install很慢-解决方法" class="headerlink" title="npm install很慢-解决方法"></a>npm install很慢-解决方法</h1><h3 id="更换镜像源"><a href="#更换镜像源" class="headerlink" title="更换镜像源"></a>更换镜像源</h3><ul><li><strong>使用淘宝镜像（cnpm）</strong>：在服务器上全局安装<code>cnpm</code>，执行<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>。然后使用<code>cnpm install</code>替代<code>npm install</code>来安装项目依赖。</li><li><strong>使用其他镜像源</strong>：比如使用 Yarn 的镜像源（Yarn 和 npm 有类似的功能），先安装 Yarn（<code>npm install -g yarn</code>），然后配置 Yarn 镜像源（<code>yarn config set registry https://registry.npm.taobao.org</code>），再使用<code>yarn</code>安装依赖。也可以尝试使用企业内部的私有镜像源，如果有的话。</li></ul><h3 id="优化网络连接"><a href="#优化网络连接" class="headerlink" title="优化网络连接"></a>优化网络连接</h3><ul><li><strong>检查服务器网络设置</strong>：确保服务器网络连接稳定，没有限制或阻塞 NPM 下载的网络策略。如果服务器在防火墙后，检查防火墙规则是否允许 NPM 相关的网络访问。</li><li><strong>增加网络带宽（如果可能）</strong>：联系服务器提供商，看是否可以临时或长期增加网络带宽，特别是在安装大型依赖包或多个依赖时。</li></ul><h3 id="本地安装后上传"><a href="#本地安装后上传" class="headerlink" title="本地安装后上传"></a>本地安装后上传</h3><ul><li>在本地开发环境（网络较好的地方）中，在项目目录下执行<code>npm install</code>，将安装好依赖的整个项目目录（除了<code>node_modules</code>目录下的二进制文件可能需要重新编译外）打包上传到服务器。这样可以避免在服务器上缓慢的下载过程，但要注意服务器环境和本地环境的一致性。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Node快速写API</title>
    <link href="/blog/posts/52388.html"/>
    <url>/blog/posts/52388.html</url>
    
    <content type="html"><![CDATA[<h1 id="快速写API"><a href="#快速写API" class="headerlink" title="快速写API"></a>快速写API</h1><blockquote><p>以 Express 框架为例</p></blockquote><p>首先，确保已经安装了 Node.js，然后新建一个文件夹，在命令行中进入该文件夹后执行<code>npm init -y</code>初始化项目，接着安装 Express：<code>npm install express</code>。</p><p>创建一个名为<code>app.js</code>的文件，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>();<br><span class="hljs-keyword">const</span> port = <span class="hljs-number">8081</span>;<br><span class="hljs-keyword">const</span> multer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;multer&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><br><span class="hljs-comment">// 假设你的HTML文件在项目目录下的public文件夹中的index.html</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/index&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> htmlPath = path.<span class="hljs-title function_">join</span>(__dirname, <span class="hljs-string">&#x27;public&#x27;</span>, <span class="hljs-string">&#x27;index.html&#x27;</span>);<br>    res.<span class="hljs-title function_">sendFile</span>(htmlPath);<br>&#125;);<br><br><span class="hljs-comment">// 创建一个简单的GET请求API</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/api/greet&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    res.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello, huangjinyan!&#x27;</span>);<br>&#125;);<br><br><span class="hljs-comment">// 创建一个返回JSON数据的API</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/api/user&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> user = &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;李明~&quot;</span>,<br>        <span class="hljs-attr">age</span>: <span class="hljs-number">30</span><br>    &#125;;<br>    res.<span class="hljs-title function_">json</span>(user);<br>&#125;);<br><br><span class="hljs-comment">// 下载文件</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/api/download&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> filePath = path.<span class="hljs-title function_">join</span>(__dirname, <span class="hljs-string">&#x27;files&#x27;</span>, <span class="hljs-string">&#x27;example.txt&#x27;</span>);<br>    <span class="hljs-keyword">const</span> fileName = <span class="hljs-string">&#x27;example.txt&#x27;</span>;<br>    res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Content-Disposition&#x27;</span>, <span class="hljs-string">`attachment; filename=&quot;<span class="hljs-subst">$&#123;fileName&#125;</span>&quot;`</span>);<br>    res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;application/octet-stream&#x27;</span>);<br>    fs.<span class="hljs-title function_">access</span>(filePath, fs.<span class="hljs-property">constants</span>.<span class="hljs-property">F_OK</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            res.<span class="hljs-title function_">status</span>(<span class="hljs-number">404</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;File not found&#x27;</span>);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">const</span> fileStream = fs.<span class="hljs-title function_">createReadStream</span>(filePath);<br>        fileStream.<span class="hljs-title function_">pipe</span>(res);<br>    &#125;);<br>&#125;);<br><br><br><br><span class="hljs-comment">// 启动服务器并监听端口</span><br>app.<span class="hljs-title function_">listen</span>(port, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server running at http://localhost:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br>&#125;);<br><br></code></pre></td></tr></table></figure><p>在上述代码中：</p><ol><li>引入<code>express</code>模块并创建一个<code>app</code>实例。</li><li>定义了一个端口号<code>3000</code>。</li><li>通过<code>app.get</code>方法创建了一个<code>GET</code>请求类型的 API。当访问<code>/api/greet</code>路径时，服务器会返回<code>Hello, World!</code>的响应。</li><li>当访问<code>/api/user</code>路径时，服务器会返回一个包含用户信息的 JSON 对象。</li><li>亦可打开指定网页</li><li>下载文件</li><li>最后，使用<code>app.listen</code>启动服务器并监听指定端口，在控制台打印服务器运行的地址。</li></ol><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241107132444122.png" alt="image-20241107132444122"></p>]]></content>
    
    
    
    <tags>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx配置了SSL不生效?</title>
    <link href="/blog/posts/37544.html"/>
    <url>/blog/posts/37544.html</url>
    
    <content type="html"><![CDATA[<blockquote><p>小细节~</p></blockquote><ol><li>先检查服务器的安全组是否开发规则，将443端口打开。</li><li>检查配置文件是否书写错误</li><li>注意文件读写权限</li><li>注意端口占用，用<code>netstat -tlnp</code>查看接口情况</li></ol><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241108020236512.png" alt="image-20241108020236512"></p>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何实现内网穿透？</title>
    <link href="/blog/posts/26131.html"/>
    <url>/blog/posts/26131.html</url>
    
    <content type="html"><![CDATA[<blockquote><p>微信&#x2F;手机APP本地开发调试<br>穿透防火墙<br>快速项目DEMO演示TCP&#x2F;UDP转发，连接能想象的一切</p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241105180748137.png" alt="image-20241105180748137"></p><h3 id="1-注册并获取-Token"><a href="#1-注册并获取-Token" class="headerlink" title="1. 注册并获取 Token"></a>1. 注册并获取 Token</h3><ol><li>访问 natapp 官网： <a href="https://natapp.cn/">https://natapp.cn</a></li><li>注册并登录账户。</li><li>登录后，在个人中心页面获取 <strong>Token</strong>，这是你使用 natapp 客户端时需要用到的认证信息。</li></ol><h3 id="2-下载并安装-natapp-客户端"><a href="#2-下载并安装-natapp-客户端" class="headerlink" title="2. 下载并安装 natapp 客户端"></a>2. 下载并安装 natapp 客户端</h3><ol><li>根据你的操作系统下载 natapp 客户端：<ul><li>Windows: 下载 <code>.exe</code> 安装包</li><li>macOS: 下载 <code>.tar.gz</code> 压缩包</li><li>Linux: 下载对应的 <code>.tar.gz</code> 或 <code>.deb</code> 包</li></ul></li><li>解压并安装客户端：<ul><li>Windows 用户：解压后可以直接在命令行中使用 <code>natapp.exe</code></li><li>Linux&#x2F;macOS 用户：解压后进入解压目录并将客户端放到系统的可执行路径下（如 <code>/usr/local/bin/</code>）。</li></ul></li></ol><h3 id="3-配置-natapp-客户端"><a href="#3-配置-natapp-客户端" class="headerlink" title="3. 配置 natapp 客户端"></a>3. 配置 natapp 客户端</h3><ol><li><p>将下载的客户端文件解压并进入该目录。</p></li><li><p>在命令行中执行以下命令来启动 natapp 客户端：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./natapp <span class="hljs-attribute">-authtoken</span>=&lt;Your-Token&gt;<br></code></pre></td></tr></table></figure><p>其中 <code>&lt;Your-Token&gt;</code> 是在第一步中获取的 Token。这个命令启动了 natapp 客户端并连接到 natapp 服务器。</p></li><li><p>如果你需要指定本地端口进行内网穿透，可以在命令中加上 <code>-localip</code> 和 <code>-localport</code> 参数：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./natapp <span class="hljs-attribute">-authtoken</span>=&lt;Your-Token&gt; <span class="hljs-attribute">-localip</span>=127.0.0.1 <span class="hljs-attribute">-localport</span>=8080<br></code></pre></td></tr></table></figure><p>其中，<code>-localip</code> 是你本地服务的 IP 地址（通常是 127.0.0.1），<code>-localport</code> 是你本地服务的端口号（如 8080）。</p></li></ol><h3 id="4-配置协议和隧道类型"><a href="#4-配置协议和隧道类型" class="headerlink" title="4. 配置协议和隧道类型"></a>4. 配置协议和隧道类型</h3><h4 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h4><p>个人中心直接编辑配置   <a href="https://natapp.cn/tunnel/lists">我的隧道</a></p><h4 id="方式2："><a href="#方式2：" class="headerlink" title="方式2："></a>方式2：</h4><ol><li><p><strong>HTTP 或 HTTPS 隧道</strong>：如果你的本地服务是一个 Web 应用，可以通过 HTTP 或 HTTPS 协议映射到公网。命令如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./natapp <span class="hljs-attribute">-authtoken</span>=&lt;Your-Token&gt; <span class="hljs-attribute">-localport</span>=8080 -http<br></code></pre></td></tr></table></figure><p>这样会将你本地的 8080 端口映射为公网的 HTTP 地址。</p></li><li><p><strong>TCP 隧道</strong>：如果你需要穿透的是一个 TCP 服务（例如 MySQL 或其他网络服务），可以使用 TCP 隧道：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./natapp <span class="hljs-attribute">-authtoken</span>=&lt;Your-Token&gt; <span class="hljs-attribute">-localport</span>=3306 -tcp<br></code></pre></td></tr></table></figure><p>这会将你本地的 3306 端口映射到公网，适用于数据库等 TCP 协议服务。</p></li><li><p><strong>自定义域名</strong>：如果你在 natapp 中购买了域名服务，可以使用自定义域名进行访问：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./natapp <span class="hljs-attribute">-authtoken</span>=&lt;Your-Token&gt; <span class="hljs-attribute">-localport</span>=8080 -http <span class="hljs-attribute">-subdomain</span>=your-subdomain<br></code></pre></td></tr></table></figure><p>这会将本地 8080 端口映射到 <code>your-subdomain.natapp.cn</code>，并且每次启动时使用相同的子域名。</p></li></ol><h3 id="5-查看公网地址"><a href="#5-查看公网地址" class="headerlink" title="5. 查看公网地址"></a>5. 查看公网地址</h3><p>启动 natapp 客户端后，你会看到类似以下的输出：</p><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241105180941089.png" alt="image-20241105180941089"></p><h3 id="6-高级配置"><a href="#6-高级配置" class="headerlink" title="6. 高级配置"></a>6. 高级配置</h3><ul><li><p><strong>多端口映射</strong>：如果需要同时映射多个端口，可以在命令行中使用多个 <code>-localport</code> 配置：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./natapp <span class="hljs-attribute">-authtoken</span>=&lt;Your-Token&gt; <span class="hljs-attribute">-localport</span>=8080 <span class="hljs-attribute">-localport</span>=3306 -http -tcp<br></code></pre></td></tr></table></figure></li><li><p><strong>配置文件</strong>：如果不想每次都输入长命令，可以通过配置文件来简化启动过程。将 <code>authtoken</code> 和其他参数写入配置文件 <code>config.ini</code>，然后直接执行：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">#将本文件放置于natapp同级目录 程序将读取 [default] 段</span><br><span class="hljs-comment">#在命令行参数模式如 natapp -authtoken=xxx 等相同参数将会覆盖掉此配置</span><br><span class="hljs-comment">#命令行参数 -config= 可以指定任意config.ini文件</span><br><span class="hljs-section">[default]</span><br><span class="hljs-attr">authtoken</span>=e3fd8           <span class="hljs-comment">#对应一条隧道的authtoken</span><br>clienttoken=                    <span class="hljs-comment">#对应客户端的clienttoken,将会忽略authtoken,若无请留空,</span><br><span class="hljs-attr">log</span>=none                        <span class="hljs-comment">#log 日志文件,可指定本地文件, none=不做记录,stdout=直接屏幕输出 ,默认为none</span><br><span class="hljs-attr">loglevel</span>=ERROR                  <span class="hljs-comment">#日志等级 DEBUG, INFO, WARNING, ERROR 默认为 DEBUG</span><br>http_proxy=                  <span class="hljs-comment">#代理设置 如 http://10.123.10.10:3128 非代理上网用户请务必留空</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="7-监控和管理"><a href="#7-监控和管理" class="headerlink" title="7. 监控和管理"></a>7. 监控和管理</h3><p>natapp 提供了 Web 控制台，可以通过登录官网进行隧道管理和状态监控。在控制台中，你可以查看活动隧道、访问日志以及控制隧道的开启或关闭。</p><p>访问隧道指定的端口号即可~</p><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241105181342178.png" alt="image-20241105181342178"></p><h3 id="8-停止使用-natapp"><a href="#8-停止使用-natapp" class="headerlink" title="8. 停止使用 natapp"></a>8. 停止使用 natapp</h3><p>如果不再需要内网穿透服务，只需要在客户端的命令行中按 <code>Ctrl + C</code> 停止客户端进程，或通过任务管理器结束进程。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo server命令无法识别？</title>
    <link href="/blog/posts/36980.html"/>
    <url>/blog/posts/36980.html</url>
    
    <content type="html"><![CDATA[<p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241104123045155.png"></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p> PowerShell 的执行策略限制了脚本的运行</p><h2 id="方法一：以管理员身份更改执行策略（推荐）"><a href="#方法一：以管理员身份更改执行策略（推荐）" class="headerlink" title="方法一：以管理员身份更改执行策略（推荐）"></a>方法一：以管理员身份更改执行策略（推荐）</h2><ol><li>以管理员身份打开 PowerShell。在开始菜单中搜索 “PowerShell”，右键点击 “Windows PowerShell”，选择 “以管理员身份运行”。</li><li>在打开的 PowerShell 窗口中，输入以下命令：<ul><li><code>Set-ExecutionPolicy RemoteSigned</code></li><li>这个命令会将执行策略更改为 “RemoteSigned”。这意味着本地创建的脚本可以运行，而从网络下载的脚本需要有数字签名才能运行。</li></ul></li><li>按照提示操作，输入<code>Y</code>或者<code>A</code>（<code>Y</code>表示对当前作用域更改策略，<code>A</code>表示对所有作用域更改策略），然后回车。</li></ol><h2 id="方法二：仅对当前会话更改执行策略"><a href="#方法二：仅对当前会话更改执行策略" class="headerlink" title="方法二：仅对当前会话更改执行策略"></a>方法二：仅对当前会话更改执行策略</h2><ol><li>在你运行<code>hexo server</code><br>的同一个 PowerShell 窗口中（不需要以管理员身份运行），输入以下命令：<ul><li><code>Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass</code></li><li>这个命令只在当前的 PowerShell 进程中绕过执行策略的限制。这样不会对整个系统的执行策略设置产生永久性影响。不过每次重新打开 PowerShell 窗口都需要重新执行此命令。</li></ul></li><li>修改执行策略后，再尝试运行<code>hexo server</code>命令就应该可以正常执行了。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>在网页中添加 Live2D 看板娘</title>
    <link href="/blog/posts/44745.html"/>
    <url>/blog/posts/44745.html</url>
    
    <content type="html"><![CDATA[<h2 id="仓库地址"><a href="#仓库地址" class="headerlink" title="仓库地址"></a>仓库地址</h2><p><a href="https://github.com/stevenjoezhang/live2d-widget">前往</a></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>直接在网页中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script src=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;&lt;/script&gt;<br>    <br></code></pre></td></tr></table></figure><p>浏览器打开页面即可看到效果，更多自定义用法可以参考文档。</p><p><img src="http://cdn.qiniu.liyansheng.top/img/20241104001519.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>科学上网-技法</title>
    <link href="/blog/posts/40617.html"/>
    <url>/blog/posts/40617.html</url>
    
    <content type="html"><![CDATA[<h1 id="🚀科学上网"><a href="#🚀科学上网" class="headerlink" title="🚀科学上网"></a>🚀科学上网</h1><h2 id="方案１"><a href="#方案１" class="headerlink" title="方案１"></a>方案１</h2><p>低费用，稳定</p><p><a href="https://一分机场.com/">一分机场</a></p><h2 id="方案２"><a href="#方案２" class="headerlink" title="方案２"></a>方案２</h2><p>每个月有免费额度，不太稳定，凑合用</p><p><a href="https://ikuuu.pw/">IKUUU</a></p><h2 id="方案３"><a href="#方案３" class="headerlink" title="方案３"></a>方案３</h2><p>开源节点，看运气，有些可以用</p><p><a href="https://fastly.jsdelivr.net/gh/chengaopan/AutoMergePublicNodes@master/list.yml">节点</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>推荐　<br><a href="https://clashforwindows.org/clash-for-windows-official/">Clash</a></p><h2 id="方案4"><a href="#方案4" class="headerlink" title="方案4"></a>方案4</h2><p>工具使用 <a href="https://github.com/hiddify/hiddify-next/releases">【hiddify】有win版，安卓版，和mac版</a></p><p>免费节点可订阅</p><p><a href="https://github.com/chengaopan/AutoMergePublicNodes?tab=readme-ov-file">AutoMergePublicNodes</a></p><p><a href="https://github.com/mahdibland/V2RayAggregator?tab=readme-ov-file">V2RayAggregator</a></p><p><a href="https://github.com/barry-far/V2ray-Configs?tab=readme-ov-file">V2ray-Config</a></p><h2 id="方案5"><a href="#方案5" class="headerlink" title="方案5"></a>方案5</h2><p>自行搭建，<a href="https://xiaobaikj.blogspot.com/2024/09/2024vpn8kvpn.html?m=1">参考</a></p><p><a href="https://small-wind-4a43.liyansheng0214.workers.dev/b7942dd7-f146-4701-985b-373a04fc2f21/configs?sub=list">可用节点列表</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>免费看电视-方案</title>
    <link href="/blog/posts/18883.html"/>
    <url>/blog/posts/18883.html</url>
    
    <content type="html"><![CDATA[<h1 id="📺免费看电视"><a href="#📺免费看电视" class="headerlink" title="📺免费看电视"></a>📺免费看电视</h1><p><a href="https://github.com/yan-sheng-li/TvBox-solution">相关资源仓库</a></p><h2 id="小苹果影视"><a href="#小苹果影视" class="headerlink" title="小苹果影视"></a>小苹果影视</h2><p>内置播放源，央视卫士直播，影视轮播等，可以直接安装 <code>安卓端</code>，<code>TV端</code></p><p><a href="http://www.xpgtv.com/">点我去下载</a></p><h2 id="我的电视"><a href="#我的电视" class="headerlink" title="我的电视"></a>我的电视</h2><p>内置直播源，亦可自定义</p><p><a href="https://github.com/yaoxieyoulei/mytv-android">项目地址</a></p><h2 id="TVBox"><a href="#TVBox" class="headerlink" title="TVBox"></a>TVBox</h2><p>自行配置数据源</p><p><a href="https://github.com/a736240087/tvbox">项目地址</a></p><h2 id="数据源获取"><a href="#数据源获取" class="headerlink" title="数据源获取"></a>数据源获取</h2><p><a href="https://www.juwanhezi.com/other/jsonlist">渠道1</a></p><p><a href="https://github.com/Guovin/TV">渠道2</a></p><h2 id="测试可用（时间：2024年10月29日）"><a href="#测试可用（时间：2024年10月29日）" class="headerlink" title="测试可用（时间：2024年10月29日）"></a>测试可用（时间：2024年10月29日）</h2><p>菜妮丝</p><p><a href="https://tv.菜妮丝.top/">https://tv.xn--yhqu5zs87a.top</a></p><p>巧儿</p><p><a href="http://pandown.pro/tvbox/tvbox.json">http://pandown.pro/tvbox/tvbox.json</a></p><p>俊哥</p><p><a href="http://home.jundie.top:81/top98.json">http://home.jundie.top:81/top98.json</a></p><p>dxawi</p><p><a href="https://dxawi.github.io/0/0.json">https://dxawi.github.io/0/0.json</a></p><p>小盒子多仓</p><p><a href="http://xhztv.top/tvbox.txt">http://xhztv.top/tvbox.txt</a></p><p>毒盒多仓</p><p><a href="https://tv.youdu.fan:666/">https://tv.youdu.fan:666</a></p><p>业余打发多仓</p><p><a href="https://ghproxy.net/https://raw.githubusercontent.com/yyfxz/qqtv/main/qq.json">https://ghproxy.net/https://raw.githubusercontent.com/yyfxz/qqtv/main/qq.json</a></p><h2 id="直播源"><a href="#直播源" class="headerlink" title="直播源"></a>直播源</h2><p>可用1</p><p><a href="https://agit.ai/Yoursmile7/TVBox/raw/branch/master/live.txt">https://agit.ai/Yoursmile7/TVBox/raw/branch/master/live.txt</a></p><p>可用2</p><p><a href="http://175.178.251.183:6689/live.m3u">http://175.178.251.183:6689/live.m3u</a></p><h2 id="🔧工具脚本：批量检测数据源的可用性"><a href="#🔧工具脚本：批量检测数据源的可用性" class="headerlink" title="🔧工具脚本：批量检测数据源的可用性"></a>🔧工具脚本：批量检测数据源的可用性</h2><blockquote><p>将你的链接都放到一个txt文本里面，然后执行这个脚本，可用的链接将单独筛选出来，这样就不用一个一个链接去试了😁</p></blockquote><h2 id="ping-links-py"><a href="#ping-links-py" class="headerlink" title="ping_links.py"></a>ping_links.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-comment"># 读取链接文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;links.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    links = file.readlines()<br><br><span class="hljs-comment"># 存储可用的链接</span><br>reachable_links = []<br><br><span class="hljs-comment"># 测试每个链接</span><br><span class="hljs-keyword">for</span> link <span class="hljs-keyword">in</span> links:<br>    link = link.strip()<br>    <span class="hljs-keyword">try</span>:<br>        response = requests.head(link, allow_redirects=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>            reachable_links.append(link)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;可用链接: <span class="hljs-subst">&#123;link&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;不可用链接: <span class="hljs-subst">&#123;link&#125;</span> (状态码: <span class="hljs-subst">&#123;response.status_code&#125;</span>)&quot;</span>)<br>    <span class="hljs-keyword">except</span> requests.RequestException:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;不可用链接: <span class="hljs-subst">&#123;link&#125;</span> (请求异常)&quot;</span>)<br><br><span class="hljs-comment"># 将可用的链接写入新文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;reachable_links.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> link <span class="hljs-keyword">in</span> reachable_links:<br>        file.write(link + <span class="hljs-string">&#x27;\n&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;可用的链接已保存到 reachable_links.txt 文件中。&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>电脑深度清理C盘-技巧</title>
    <link href="/blog/posts/25153.html"/>
    <url>/blog/posts/25153.html</url>
    
    <content type="html"><![CDATA[<blockquote><p>C盘爆红，满了如何清理？</p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/20241101231002.png"></p><h2 id="第一步：清理系统缓存"><a href="#第一步：清理系统缓存" class="headerlink" title="第一步：清理系统缓存"></a>第一步：清理系统缓存</h2><p>按<code>win+R</code>，输入<code>%temp%</code>，接着全选删除</p><p>按<code>win+R</code>，输入<code>SoftWareDistribution</code>,进入<code>Download</code>文件夹，全选删除</p><p>按<code>win+R</code>，输入<code>temp</code>，全选删除</p><h2 id="第二步，清理系统更新文件"><a href="#第二步，清理系统更新文件" class="headerlink" title="第二步，清理系统更新文件"></a>第二步，清理系统更新文件</h2><p>此电脑&#x3D;》C盘&#x3D;》属性&#x3D;》磁盘清理&#x3D;》清理系统文件&#x3D;》列表全选&#x3D;》删除</p><p>开始&#x3D;》设置&#x3D;》存储&#x3D;》临时文件&#x3D;》全选删除</p><h2 id="第三步，修改文件保存位置"><a href="#第三步，修改文件保存位置" class="headerlink" title="第三步，修改文件保存位置"></a>第三步，修改文件保存位置</h2><p>开始&#x3D;》设置&#x3D;》存储&#x3D;》更改新内容的保存位置&#x3D;》全改其他盘</p><p>此外，电脑软件如微信，浏览器，网盘等各自内部也可以修改文件保存位置，全改其他盘</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>⚙常用工具安装教程</title>
    <link href="/blog/install/"/>
    <url>/blog/install/</url>
    
    <content type="html"><![CDATA[<h2 id="📢作者全平台足迹，可点击👇-前往验真伪！"><a href="#📢作者全平台足迹，可点击👇-前往验真伪！" class="headerlink" title="📢作者全平台足迹，可点击👇-前往验真伪！"></a>📢作者全平台足迹，可点击👇-前往验真伪！</h2><span><a href="http://www.liyansheng.top/blog"><img src="https://img.shields.io/badge/木子空间-自营博客-00dfbf" alt="自营博客"></a><a href="https://yan-sheng-li.github.io/project/"><img src="https://img.shields.io/badge/木子空间-项目&资料-1e90ff" alt="项目合集"></a><a href="https://blog.csdn.net/weixin_44107140"><img src="https://img.shields.io/badge/木子空间-CSDN&粉丝1.5w+-FC5531" alt="CSDN博客"></a><a href="https://gitee.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-Gitee-orange" alt="Gitee"></a><a href="https://github.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-GitHub-black" alt="GitHub"></a><img src="https://img.shields.io/badge/木子空间-公众号《编程亿点有趣》&粉丝6k+-brightgreen" alt="公众号"><a href="https://qm.qq.com/cgi-bin/qm/qr?k=NZUoWMzd3PQLWwxRGMiBNYEnVkEdNq__&jump_from=webapi&authKey=kgAofDqUzgwMCSX+UQQwxf837zMeWFGGmo4iIcbgkklW2pdfmVOlxPWAK6sMYMaC"><img src="https://img.shields.io/badge/木子空间-QQ社群(450+人)-18a2ea" alt="QQ Group"></a><img src="https://img.shields.io/badge/博主-QQ：1761724207-29a1db" alt="QQ"><img src="https://img.shields.io/badge/博主-微信：17641244340-07c261" alt="微信"><a href="https://www.xiaohongshu.com/user/profile/668f634100000000030315a1"><img src="https://img.shields.io/badge/木子空间-小红书-FF2842" alt="小红书"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423150441.png"><img src="https://img.shields.io/badge/木子空间-闲鱼-ffe10f" alt="闲鱼"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423145452.png"><img src="https://img.shields.io/badge/木子空间-小程序商店-green" alt="小程序商店"></a></span><h2 id="1、远程工具【必装】"><a href="#1、远程工具【必装】" class="headerlink" title="1、远程工具【必装】"></a>1、远程工具【必装】</h2><h3 id="向日葵"><a href="#向日葵" class="headerlink" title="向日葵"></a>向日葵</h3><p><a href="https://sunlogin.oray.com/download">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20250424170133.png"></p><h3 id="RustDesk-备用"><a href="#RustDesk-备用" class="headerlink" title="RustDesk(备用)"></a>RustDesk(备用)</h3><p><a href="https://github.com/rustdesk/rustdesk/releases/tag/1.3.9">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20250505203659.png"></p><h2 id="2、IDEA社区版【必装】"><a href="#2、IDEA社区版【必装】" class="headerlink" title="2、IDEA社区版【必装】"></a>2、IDEA社区版【必装】</h2><p><a href="https://www.jetbrains.com/zh-cn/idea/download/?section=windows">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20240702130931.png"></p><h2 id="3、MySQL8【必装】"><a href="#3、MySQL8【必装】" class="headerlink" title="3、MySQL8【必装】"></a>3、MySQL8【必装】</h2><h3 id="官方版"><a href="#官方版" class="headerlink" title="官方版"></a>官方版</h3><p><a href="https://dev.mysql.com/downloads/windows/installer/8.0.html">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20240702141752.png"></p><h3 id="一键安装版"><a href="#一键安装版" class="headerlink" title="一键安装版"></a>一键安装版</h3><p><a href="https://qm.qq.com/cgi-bin/qm/qr?k=NZUoWMzd3PQLWwxRGMiBNYEnVkEdNq__&jump_from=webapi&authKey=kgAofDqUzgwMCSX+UQQwxf837zMeWFGGmo4iIcbgkklW2pdfmVOlxPWAK6sMYMaC">👉点我去群文件获取</a></p><h2 id="4、Git【推荐】"><a href="#4、Git【推荐】" class="headerlink" title="4、Git【推荐】"></a>4、Git【推荐】</h2><p><a href="https://git-scm.com/download/win">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20240702183936.png"></p><h2 id="5、Navcat"><a href="#5、Navcat" class="headerlink" title="5、Navcat"></a>5、Navcat</h2><p><a href="https://www.navicat.com.cn/products#navicat">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20240702184307.png"></p><h2 id="6、DBeaver【推荐】"><a href="#6、DBeaver【推荐】" class="headerlink" title="6、DBeaver【推荐】"></a>6、DBeaver【推荐】</h2><p><a href="https://dbeaver.io/download/">👉点我去下载</a></p><p><img src="http://cdn.qiniu.liyansheng.top/img/20241120173025.png"></p><h2 id="7、PyCharm"><a href="#7、PyCharm" class="headerlink" title="7、PyCharm"></a>7、PyCharm</h2><p><a href="https://www.jetbrains.com/zh-cn/pycharm/download/?section=windows">👉点我去下载</a></p><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241120173215968.png" alt="image-20241120173215968"></p><h2 id="8、VSCode【前端必备】"><a href="#8、VSCode【前端必备】" class="headerlink" title="8、VSCode【前端必备】"></a>8、VSCode【前端必备】</h2><p><a href="https://code.visualstudio.com/">👉点我去下载</a></p><p><img src="http://cdn.qiniu.liyansheng.top/img/image-20241120173445576.png" alt="image-20241120173445576"></p><h2 id="9、Node"><a href="#9、Node" class="headerlink" title="9、Node"></a>9、Node</h2><p><a href="https://nodejs.org/zh-cn/download">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20250417070944.png"></p><h2 id="10、微信开发者工具"><a href="#10、微信开发者工具" class="headerlink" title="10、微信开发者工具"></a>10、微信开发者工具</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20250417071406.png"></p><h2 id="11、科学上网"><a href="#11、科学上网" class="headerlink" title="11、科学上网"></a>11、科学上网</h2><blockquote><p>机场：<br><a href="https://一分机场.com/">https://xn--4gqx1hgtfdmt.com/</a></p></blockquote><p><a href="https://www.clashforwindows.net/clash-for-windows-download/">👉点我去下载</a><br><img src="http://cdn.qiniu.liyansheng.top/img/20250505202932.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>💪100%保真，在线监工，修改更追溯，随写随更新</title>
    <link href="/blog/issues_flow/"/>
    <url>/blog/issues_flow/</url>
    
    <content type="html"><![CDATA[<h1 id="😀任务进度跟踪"><a href="#😀任务进度跟踪" class="headerlink" title="😀任务进度跟踪"></a>😀任务进度跟踪</h1><span><a href="http://www.liyansheng.top/blog"><img src="https://img.shields.io/badge/木子空间-自营博客-00dfbf" alt="自营博客"></a><a href="https://yan-sheng-li.github.io/project/"><img src="https://img.shields.io/badge/木子空间-项目&资料-1e90ff" alt="项目合集"></a><a href="https://blog.csdn.net/weixin_44107140"><img src="https://img.shields.io/badge/木子空间-CSDN&粉丝1.5w+-FC5531" alt="CSDN博客"></a><a href="https://gitee.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-Gitee-orange" alt="Gitee"></a><a href="https://github.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-GitHub-black" alt="GitHub"></a><img src="https://img.shields.io/badge/木子空间-公众号《编程亿点有趣》&粉丝6k+-brightgreen" alt="公众号"><a href="https://qm.qq.com/cgi-bin/qm/qr?k=NZUoWMzd3PQLWwxRGMiBNYEnVkEdNq__&jump_from=webapi&authKey=kgAofDqUzgwMCSX+UQQwxf837zMeWFGGmo4iIcbgkklW2pdfmVOlxPWAK6sMYMaC"><img src="https://img.shields.io/badge/木子空间-QQ社群(450+人)-18a2ea" alt="QQ Group"></a><img src="https://img.shields.io/badge/博主-QQ：1761724207-29a1db" alt="QQ"><img src="https://img.shields.io/badge/博主-微信：17641244340-07c261" alt="微信"><a href="https://www.xiaohongshu.com/user/profile/668f634100000000030315a1"><img src="https://img.shields.io/badge/木子空间-小红书-FF2842" alt="小红书"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423150441.png"><img src="https://img.shields.io/badge/木子空间-闲鱼-ffe10f" alt="闲鱼"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423145452.png"><img src="https://img.shields.io/badge/木子空间-小程序商店-green" alt="小程序商店"></a></span><p><img src="http://cdn.qiniu.liyansheng.top/img/note2.png"></p><h1 id="🎯代码提交记录"><a href="#🎯代码提交记录" class="headerlink" title="🎯代码提交记录"></a>🎯代码提交记录</h1><p><img src="http://cdn.qiniu.liyansheng.top/img/note4.png"></p><h1 id="📝修改细节，我怎么改的，改了哪里，你都可以看得到"><a href="#📝修改细节，我怎么改的，改了哪里，你都可以看得到" class="headerlink" title="📝修改细节，我怎么改的，改了哪里，你都可以看得到"></a>📝修改细节，我怎么改的，改了哪里，你都可以看得到</h1><p><img src="http://cdn.qiniu.liyansheng.top/img/20240623140314.png"></p><h3 id="1-使用码云，点我前往"><a href="#1-使用码云，点我前往" class="headerlink" title="1. 使用码云，点我前往"></a>1. 使用码云，<a href="https://gitee.com/">点我前往</a></h3><h3 id="2-需求、问题、bug随时提-👇"><a href="#2-需求、问题、bug随时提-👇" class="headerlink" title="2. 需求、问题、bug随时提     👇"></a>2. 需求、问题、bug随时提     👇</h3><hr><p>找到对应的仓库，点击<code>issues</code>，然后点击右边的<code>新增</code></p><p><img src="http://cdn.qiniu.liyansheng.top/img/s1.png"></p><p>填写<code>问题/需求</code>，<code>描述</code>，然后<code>提交</code></p><p><img src="http://cdn.qiniu.liyansheng.top/img/s2.png"></p><h3 id="3-🔑举例"><a href="#3-🔑举例" class="headerlink" title="3.🔑举例"></a>3.🔑举例</h3><p><img src="http://cdn.qiniu.liyansheng.top/img/s3.png"></p><h2 id="一般资费说明：点我查看"><a href="#一般资费说明：点我查看" class="headerlink" title="一般资费说明：点我查看"></a>一般资费说明：<a href="/remote_help/">点我查看</a></h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>📌强强支援：远程调试🖥 项目定做、天坑项目救场📝 疑难解答❓项目扩展、项目讲解、 攻bug🐛.....</title>
    <link href="/blog/remote_help/"/>
    <url>/blog/remote_help/</url>
    
    <content type="html"><![CDATA[<h2 id="📢作者全平台足迹，可点击👇-前往验真伪！"><a href="#📢作者全平台足迹，可点击👇-前往验真伪！" class="headerlink" title="📢作者全平台足迹，可点击👇-前往验真伪！"></a>📢作者全平台足迹，可点击👇-前往验真伪！</h2><span><a href="http://www.liyansheng.top/blog"><img src="https://img.shields.io/badge/木子空间-自营博客-00dfbf" alt="自营博客"></a><a href="https://yan-sheng-li.github.io/project/"><img src="https://img.shields.io/badge/木子空间-项目&资料-1e90ff" alt="项目合集"></a><a href="https://blog.csdn.net/weixin_44107140"><img src="https://img.shields.io/badge/木子空间-CSDN&粉丝1.5w+-FC5531" alt="CSDN博客"></a><a href="https://gitee.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-Gitee-orange" alt="Gitee"></a><a href="https://github.com/yan-sheng-li"><img src="https://img.shields.io/badge/木子空间-GitHub-black" alt="GitHub"></a><img src="https://img.shields.io/badge/木子空间-公众号《编程亿点有趣》&粉丝6k+-brightgreen" alt="公众号"><a href="https://qm.qq.com/cgi-bin/qm/qr?k=NZUoWMzd3PQLWwxRGMiBNYEnVkEdNq__&jump_from=webapi&authKey=kgAofDqUzgwMCSX+UQQwxf837zMeWFGGmo4iIcbgkklW2pdfmVOlxPWAK6sMYMaC"><img src="https://img.shields.io/badge/木子空间-QQ社群(450+人)-18a2ea" alt="QQ Group"></a><img src="https://img.shields.io/badge/博主-QQ：1761724207-29a1db" alt="QQ"><img src="https://img.shields.io/badge/博主-微信：17641244340-07c261" alt="微信"><a href="https://www.xiaohongshu.com/user/profile/668f634100000000030315a1"><img src="https://img.shields.io/badge/木子空间-小红书-FF2842" alt="小红书"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423150441.png"><img src="https://img.shields.io/badge/木子空间-闲鱼-ffe10f" alt="闲鱼"></a><a href="http://cdn.qiniu.liyansheng.top/img/20250423145452.png"><img src="https://img.shields.io/badge/木子空间-小程序商店-green" alt="小程序商店"></a></span><h2 id="点击查看-作者简介"><a href="#点击查看-作者简介" class="headerlink" title="点击查看-作者简介"></a><a href="/blog/about">点击查看-作者简介</a></h2><!-- ![](http://cdn.qiniu.liyansheng.top/img/ad2.jpg) --><p><img src="http://cdn.qiniu.liyansheng.top/img/20250302210543.png"></p><h2 id="工具不会装？点我指导"><a href="#工具不会装？点我指导" class="headerlink" title="工具不会装？点我指导"></a><a href="/blog/install">工具不会装？点我指导</a></h2><h2 id="找项目？点我前往"><a href="#找项目？点我前往" class="headerlink" title="找项目？点我前往"></a><a href="https://www.liyansheng.top/all.html">找项目？点我前往</a></h2><p><img src="http://cdn.qiniu.liyansheng.top/img/20250423144654.png"></p><p><a href="https://www.liyansheng.top/line-up.html">预约排队实况-点我查看</a></p><h2 id="📝服务分类"><a href="#📝服务分类" class="headerlink" title="📝服务分类"></a>📝服务分类</h2><table><thead><tr><th>序号</th><th>内容</th><th>服务费</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>博主亲作，普通课程设计（不含框架），大作业等</td><td>30+</td><td></td></tr><tr><td>2</td><td>博主亲作，如JSP+Servlet，SSM，Springboot，vue等综合型项目工程</td><td>45+</td><td></td></tr><tr><td>3</td><td>博主亲作，二改功能扩展</td><td>45+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>4</td><td>来源互联网，调试改进，二改继续扩展</td><td>60+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>5</td><td>你有程序，普通项目调试，如JAVA Swing，GUI，脚本等</td><td>40+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>6</td><td>你有程序，如JSP+Servlet，SSM，Springboot，vue，Python等综合项目</td><td>50+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>7</td><td>你有需求，没有程序，帮你去试错匹配开源项目（含调试）</td><td>70+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>8</td><td>你有需求，程序定做，先来评估主题，需求，功能等说明文档，报价看工期，难度等</td><td>商定</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>9</td><td>你有程序，需改bug，解决已知问题</td><td>35+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>10</td><td>你有程序，需要增加功能</td><td>45+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>11</td><td>一对一讲解与答疑</td><td>60+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>12</td><td>报告、论文代写，综合您的模板要求</td><td>40+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>13</td><td>软件工具安装：IDEA，MySQL，Eclipse，VSCode，JDK，SDK等等</td><td>10+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>14</td><td>代画图：功能图，类图，ER图，时序图，架构图等等</td><td>15+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr><tr><td>15</td><td>调试微信小程序</td><td>60+</td><td><strong><font color='blue'>看具体项目商定</font></strong></td></tr></tbody></table><h2 id="📍如何预约作者"><a href="#📍如何预约作者" class="headerlink" title="📍如何预约作者"></a>📍如何预约作者</h2><p>1.<strong><font color='red'>点图标👇跳转</font><strong>进入Q群（619298035）<br><a target="_blank" href="https://qm.qq.com/cgi-bin/qm/qr?k=NZUoWMzd3PQLWwxRGMiBNYEnVkEdNq__&jump_from=webapi&authKey=kgAofDqUzgwMCSX+UQQwxf837zMeWFGGmo4iIcbgkklW2pdfmVOlxPWAK6sMYMaC"><img border="0" src="http://cdn.qiniu.liyansheng.top/img/group.png" alt="远程调试-学习交流" title="远程调试-学习交流"></a><br>2. 私聊</strong>群主</strong>🥇<br>3. 预约远程调试时间<br>4. 或者直接加我Q或者V都可以👇~</p><p><img src="http://cdn.qiniu.liyansheng.top/img/20241223024228.png"></p><h2 id="🔥项目定做"><a href="#🔥项目定做" class="headerlink" title="🔥项目定做"></a>🔥项目定做</h2><blockquote><p>🔥你来要求，从第一行代码走起，实时代码提交记录,日期最新，进度一目了然，【保质保量】 <span style="color:red">绝不是网上随便扒个【天坑项目】敷衍你</span></p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/20241213010505.png"></p><blockquote><p>【一个功能点，一个提交记录】，小白也能看懂，哪个功能对应哪块代码</p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/20241213011522.png"></p><blockquote><p>私有部署仓库，项目详情只有你我可见</p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/20250419103252.png"></p><blockquote><p>项目发现问题，随时提，随时改，你也是【优秀测试】👍</p></blockquote><p><img src="http://cdn.qiniu.liyansheng.top/img/20250111132745.png"></p><blockquote><p>另外，附赠论文免费指点</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>服务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo添加live2d人物动画</title>
    <link href="/blog/posts/31779.html"/>
    <url>/blog/posts/31779.html</url>
    
    <content type="html"><![CDATA[<ol><li><p>在 Hexo 博客的 根目录下新建 &#x2F;live2d_models 文件夹</p><p> <img src="http://cdn.qiniu.liyansheng.top/typora/image-20230318061123366.png" alt="image-20230318061123366"></p></li><li><p>下载 live2d-widget.js 和对应模型库</p><p> 点击查看：<a href="https://blog.csdn.net/wang_123_zy/article/details/87181892?spm=1001.2014.3001.5506">Live2D看板娘+模型预览</a></p><p> 安装：打开根目录，命令窗口：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install live2d-widget-model-hijiki<br></code></pre></td></tr></table></figure></li><li><p>将下载的 live2d-widget.js (在node_modules里面)和模型库文件放入 &#x2F;live2d_models 文件夹中</p><p> <img src="http://cdn.qiniu.liyansheng.top/typora/image-20230318061645524.png" alt="image-20230318061645524"></p><p> <img src="http://cdn.qiniu.liyansheng.top/typora/image-20230318061711618.png" alt="image-20230318061711618"></p></li><li><p>在 Hexo 主题的配置文件中添加 live2d 配置</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Live2D</span><br><span class="hljs-comment">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="hljs-attr">live2d:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># enable: false</span><br>  <span class="hljs-attr">scriptFrom:</span> <span class="hljs-string">local</span> <span class="hljs-comment"># 默认</span><br>  <span class="hljs-attr">pluginRootPath:</span> <span class="hljs-string">live2dw/</span> <span class="hljs-comment"># 插件在站点上的根目录(相对路径)</span><br>  <span class="hljs-attr">pluginJsPath:</span> <span class="hljs-string">lib/</span> <span class="hljs-comment"># 脚本文件相对与插件根目录路径</span><br>  <span class="hljs-attr">pluginModelPath:</span> <span class="hljs-string">assets/</span> <span class="hljs-comment"># 模型文件相对与插件根目录路径</span><br>  <span class="hljs-comment"># scriptFrom: jsdelivr # jsdelivr CDN</span><br>  <span class="hljs-comment"># scriptFrom: unpkg # unpkg CDN</span><br>  <span class="hljs-comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br>  <span class="hljs-attr">tagMode:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br>  <span class="hljs-attr">debug:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 调试, 是否在控制台输出日志</span><br>  <span class="hljs-attr">model:</span><br>    <span class="hljs-attr">use:</span> <span class="hljs-string">live2d-widget-model-hijiki</span><br>    <span class="hljs-attr">scale:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">hHeadPos:</span> <span class="hljs-number">0.5</span><br>    <span class="hljs-attr">vHeadPos:</span> <span class="hljs-number">0.618</span><br>    <span class="hljs-comment"># use: live2d-widget-model-wanko # npm-module package name</span><br>    <span class="hljs-comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br>    <span class="hljs-comment"># use: ./wives/wanko # 相对于博客根目录的路径</span><br>    <span class="hljs-comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br>  <span class="hljs-attr">display:</span><br>    <span class="hljs-attr">superSample:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-number">200</span><br>    <span class="hljs-attr">height:</span> <span class="hljs-number">300</span><br>    <span class="hljs-attr">position:</span> <span class="hljs-string">left</span><br>    <span class="hljs-attr">hOffset:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">vOffset:</span> <span class="hljs-number">-50</span><br>  <span class="hljs-attr">mobile:</span><br>    <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否在移动设备上显示</span><br>    <span class="hljs-attr">scale:</span> <span class="hljs-number">0.5</span> <span class="hljs-comment"># 移动设备上的缩放       </span><br>  <span class="hljs-attr">react:</span><br>    <span class="hljs-attr">opacityDefault:</span> <span class="hljs-number">0.7</span><br>    <span class="hljs-attr">opacityOnHover:</span> <span class="hljs-number">0.8</span><br></code></pre></td></tr></table></figure></li><li><p>执行 hexo g 和 hexo s 命令重新生成和启动博客，查看效果</p></li></ol><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230318062115087.png" alt="image-20230318062115087"></p>]]></content>
    
    
    <categories>
      
      <category>建站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo集成admin插件</title>
    <link href="/blog/posts/37787.html"/>
    <url>/blog/posts/37787.html</url>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Hexo Admin</strong> 插件使你可以在浏览器中管理 Hexo 博客，包括新建、编辑和删除文章、页面和草稿。管理员可以在后台轻松地完成这些任务，而不需要进入命令行。</p></blockquote><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>安装 Hexo Admin 插件</li></ul><p>在 Hexo 博客的根目录中，使用以下命令安装 Hexo Admin 插件：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-admin</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230318060055736.png" alt="image-20230318060055736"></p><ul><li>修改 _config.yml 文件</li></ul><p>打开 Hexo 博客的 _config.yml 文件，找到 <code># Extensions</code> 部分，然后添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">admin:</span><br>  <span class="hljs-attr">username:</span> <span class="hljs-string">admin</span><br>  <span class="hljs-attr">password_hash:</span> <span class="hljs-string">098f6bcd4621d373cade4e832627b4f6</span><br>  <span class="hljs-comment"># 更改上面的密码时，请使用以下命令来生成新密码的 hash 值</span><br>  <span class="hljs-comment"># printf &quot;你的密码&quot; | openssl sha1</span><br>  <span class="hljs-comment"># 根据提示输入密码</span><br></code></pre></td></tr></table></figure><p>密码哈希值可由下面的命令生成：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">printf <span class="hljs-string">&quot;your password&quot;</span> <span class="hljs-string">| openssl sha1</span><br></code></pre></td></tr></table></figure><p>其中 <code>your password</code> 为你的密码。</p><p>将输出的密码哈希值复制到 <code>password_hash</code> 中。</p><p>另外也可以使用python生成密码哈希值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>password = <span class="hljs-string">&quot;your password&quot;</span><br>hash_object = hashlib.sha256(password.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>hex_dig = hash_object.hexdigest()<br><span class="hljs-built_in">print</span>(hex_dig)<br></code></pre></td></tr></table></figure><p>Hexo Admin 插件默认用户名为 <code>admin</code>，如果需要修改用户名，请将 <code>username</code> 修改为你所需的用户名。</p><ul><li>启动 Hexo Server</li></ul><p>使用以下命令启动 Hexo Server：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开管理员页面</p><p>在浏览器中访问 <code>http://localhost:4000/admin</code>，输入用户名和密码即可登录管理员页面。</p><p>在管理员页面中，你可以轻松地管理博客，包括创建、编辑和删除文章、页面和草稿。</p><p>需要注意的是，Hexo Admin 插件并不适用于所有的 Hexo 主题。如果主题无法与 Hexo Admin 插件兼容，请查看主题文档以获取管理博客的其他方法。</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230318055623988.png" alt="image-20230318055623988"></p>]]></content>
    
    
    <categories>
      
      <category>建站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPG公钥生成问题-解决(Linux)</title>
    <link href="/blog/posts/37189.html"/>
    <url>/blog/posts/37189.html</url>
    
    <content type="html"><![CDATA[<blockquote><p>今天要用到GPG公钥，在码云上，于是按照官方的步骤去操作，软件我下载安装好了，就是不好使，遇到的问题挺多。</p></blockquote><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>下载地址：<a href="https://gpg4win.org/">Gpg4win</a></p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230317005007100.png" alt="image-20230317005007100">这个工具安装，打开后提示报错</p><p>如下：</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230317005100081.png" alt="image-20230317005100081"></p><p>点OK后</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230317005129974.png" alt="image-20230317005129974"></p><p>于是我找了网上的一些解决方案，还是不行</p><p>我也尝试在不同的硬盘上重装了几次，还是不行</p><blockquote><p>换种方式，既然在<strong>win</strong>上不好使，那就上<strong>Linux</strong>上试试</p></blockquote><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li><p>在 Linux 终端中安装 GnuPG 工具。可以运行以下命令：</p> <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yum install gnupg <br></code></pre></td></tr></table></figure></li><li><p>打开终端并运行以下命令，生成密钥对：</p> <figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">gpg <span class="hljs-comment">--gen-key</span><br></code></pre></td></tr></table></figure></li><li><p>根据提示，选择要使用的加密算法和密钥长度。选择默认选项即可。</p></li><li><p>输入你的用户名、电子邮件地址和密码。这些信息将与你的密钥关联，并最终生成公钥和私钥。</p></li><li><p>在生成过程中，系统会提示你随机移动鼠标或者其他的随机操作，以增加生成密钥的随机性和安全性。</p></li><li><p>GPG 工具将生成公钥和私钥。可以使用以下命令查看你的公钥：</p> <figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">gpg <span class="hljs-comment">--list-keys</span><br></code></pre></td></tr></table></figure></li><li><p>导出公钥，以便在其他设备上使用：</p> <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">gpg <span class="hljs-attr">--armor</span> <span class="hljs-attr">--export</span> your-email-<span class="hljs-selector-tag">address</span> &gt; publickey.asc<br></code></pre></td></tr></table></figure><p> 将 <code>your-email-address</code> 替换为你在生成密钥时使用的电子邮件地址。</p><p> 这会将公钥导出为 ASCII 格式，并将其保存在名为 <code>publickey.asc</code> 的文件中。</p></li><li><p>复制并粘贴 ASCII 格式的公钥到需要使用的地方，比如代码托管网站、电子邮件签名等。</p></li></ol><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>将上述的publickey.asc里面的全部内容粘贴到下方的公钥框，点确定即可成功添加！</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20230317010046157.png" alt="image-20230317010046157"></p>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速实现免费使用typora</title>
    <link href="/blog/posts/28281.html"/>
    <url>/blog/posts/28281.html</url>
    
    <content type="html"><![CDATA[<blockquote><p>用过Typora的伙伴都知道，用它来写作是挺丝滑的事情，但新版的Typora已经开始收费了，如果你还想继续free使用，请往下看（支持正版哈）</p></blockquote><p>tips：本演示基于1.3.8版本</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20220930085334062.png"></p><blockquote><p>如果你还没有安装包，可以在我的百度网盘获取</p><p>链接：<a href="https://pan.baidu.com/s/1NW5ieA9sDwt1we3xcFguBg">https://pan.baidu.com/s/1NW5ieA9sDwt1we3xcFguBg</a><br>提取码：8iyi</p></blockquote><p>安装激活步骤：</p><ol><li><p>下载安装包，解压</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20220930090443217.png"></p></li><li><p>点击Setup.exe进行安装，可自定义安装目录</p></li><li><p>将<code>Crack</code>目录下的<code>.dll</code>文件添加到你的typora安装目录</p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20220930090528384.png"></p></li><li><p>验证：打开typora，点击上方的<code>帮助</code>，然后查看我的<code>许可证</code></p><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20220930090953756.png"></p></li><li><p>恭喜你，喜提free使用<code>typora</code>，继续专注你的写作吧！</p></li></ol><p><img src="http://cdn.qiniu.liyansheng.top/typora/image-20220930091009686.png"></p><hr><p>本次分享到这，下期再见！</p>]]></content>
    
    
    <categories>
      
      <category>工具神器集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
